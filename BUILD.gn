executable("Aquarium") {
  sources = [
    "src/Aquarium.cpp",
    "src/Aquarium.h",
    "src/ASSERT.h",
    "src/Buffer.h",
    "src/Context.cpp",
    "src/Context.h",
    "src/ContextFactory.cpp",
    "src/ContextFactory.h",
    "src/FishModel.h",
    "src/FPSTimer.cpp",
    "src/FPSTimer.h",
    "src/GenericModel.h",
    "src/Main.cpp",
    "src/Matrix.h",
    "src/Model.cpp",
    "src/Model.h",
    "src/OutsideModel.h",
    "src/Program.cpp",
    "src/Program.h",
    "src/SeaweedModel.h",
    "src/Texture.cpp",
    "src/Texture.h",
    "src/OpenGL/BufferGL.cpp",
    "src/OpenGL/BufferGL.h",
    "src/OpenGL/ContextGL.cpp",
    "src/OpenGL/ContextGL.h",
    "src/OpenGL/FishModelGL.cpp",
    "src/OpenGL/FishModelGL.h",
    "src/OpenGL/GenericModelGL.cpp",
    "src/OpenGL/GenericModelGL.h",
    "src/OpenGL/InnerModelGL.cpp",
    "src/OpenGL/InnerModelGL.h",
    "src/OpenGL/OutsideModelGL.cpp",
    "src/OpenGL/OutsideModelGL.h",
    "src/OpenGL/ProgramGL.cpp",
    "src/OpenGL/ProgramGL.h",
    "src/OpenGL/SeaweedModelGL.cpp",
    "src/OpenGL/SeaweedModelGL.h",
    "src/OpenGL/TextureGL.cpp",
    "src/OpenGL/TextureGL.h",
    "src/dawn/BufferDawn.cpp",
    "src/dawn/BufferDawn.h",
    "src/dawn/ContextDawn.cpp",
    "src/dawn/ContextDawn.h",
    "src/dawn/FishModelDawn.cpp",
    "src/dawn/FishModelDawn.h",
    "src/dawn/GenericModelDawn.cpp",
    "src/dawn/GenericModelDawn.h",
    "src/dawn/InnerModelDawn.cpp",
    "src/dawn/InnerModelDawn.h",
    "src/dawn/OutsideModelDawn.cpp",
    "src/dawn/OutsideModelDawn.h",
    "src/dawn/ProgramDawn.cpp",
    "src/dawn/ProgramDawn.h",
    "src/dawn/SeaweedModelDawn.cpp",
    "src/dawn/SeaweedModelDawn.h",
    "src/dawn/TextureDawn.cpp",
    "src/dawn/TextureDawn.h",
  ]
  deps = [
    "third_party:stb",
    "third_party:glad",
    "third_party:glm",
    "third_party/dawn:dawn_headers",
    "third_party/dawn:dawn_utils",
    "third_party/dawn:libdawn",
    "third_party/dawn:libdawn_native",
    "third_party/shaderc:libshaderc",
  ]
  cflags_cc = [
    "-Wno-string-conversion"
  ]
}